
C
C A VERSION OF IAN VASSIE'S TIRA PROGRAM. THIS VERSION IS WRITTEN FOR USE
C WITHIN THE TASK-2000 PACKAGE.  (EARLIER VERSIONS KEPT IN ARCHIVED
C DIRECTORIES CAN INDICATE RECENT CHANGES).
C
      INTEGER SA,SB,SC
      CHARACTER(*), PARAMETER :: input  = "input.ctl"
      CHARACTER(*), PARAMETER :: output = "output.pri"
c      CHARACTER(*), PARAMETER :: ctl = ".ctl"
c      CHARACTER(*), PARAMETER :: pri = ".pri"
      REAL*8 W1,W2,W3,W4,W5,W6,W7,W8,H,CN,P,S,DIFF,RAD,RADI,TWOPI
      REAL*8 V(120),SIG(120),SIGODD(20),SIGD(20),C(120),
     &       CONG(10),CONRL(20),CONRF(20),CON(120)
      DIMENSION F(120),U(120),HGIV(10),GGIV(10),ALPHA(20),BETA(20),
     &FSTART(20),USTART(20),FGRAD(20),UGRAD(20),VSTART(20),D(120)
     &,HT(6000),VINIT(120),TS(10000),TE(10000),HDD(120),G(120)
     &,WROW(241),ROW(240,241),ROW1(240),ROW2(240)
      CHARACTER*60 FILEIN,FILEOUT
C
      COMMON /FR/ W1,W2,W3,W4,W5,W6,W7,W8,H,CN,P,S,DIFF,NODD,NREL,NSIG
      COMMON /SE/ SIG,SIGODD,U,F,FSTART,USTART,FGRAD,UGRAD,D,NGIV
      COMMON /TH/V,SIGD,VINIT,HGIV,GGIV,ALPHA,BETA,VSTART,HT,SB,SC
      COMMON /FO/ C
      COMMON /CO/ CONG,CONRL,CONRF,CON,RAD,RADI,IYS,IDS,IRECS,IRECE
      COMMON /EO/ TWOPI,JOBS,JPRED,JRES
C
      DATA C/7.16782D-4,1.433566D-3,9.501131D-3,1.7730727D-2,1.916
     &4293D-2,.224349617D0,.225621152D0,.233850748D0,.235122283D0,.24335
     &1879D0,.244785445D0,.252934024D0,.254286576D0,.260365856D0,.261082
     &605D0,.261799388D0,.26251617D0,.263232919D0,.263949736D0,.27074576
     &5D0,.272017301D0,.280246896D0,.281680463D0,.477202625D0,.478636191
     &D0,.486865787D0,.488137322D0,.496366918D0,.497638453D0,.504434482D
     &0,.505868048D0,.507301615D0,.514097644D0,.515369179D0,.522882026D0
     &,.523598775D0,.524315524D0,.525032341D0,.533099906D0,.534533472D0,
     &.541329502D0,.749219927D0,.758802073D0,.766950654D0,.76838422D0,.7
     &86114945D0,1.002234966D0,1.011736097D0,1.019965693D0,1.029466823D0
     &,1.03090039D0,1.04719755D0,1.048631116D0,1.508103016D0,1.517604147
     &D0,1.525833741D0,1.535334872D0,1.536768438D0,1.553065598D0,1.55449
     &9165D0,.46090546D0,.46897303D0,.470406597D0,.480069757D0,.49493335
     &D0,.52216521D0,.542601036D0,.739718796D0,.75065349D0,.77788535D0,.
     &992571806D0,.99400537D0,1.01030253D0,1.25508798D0,1.26467012D0,1.2
     &7425227D0,1.48087116D0,1.49037229D0,1.49843985D0,1.49987342D0,1.50
     &666945D0,1.50937455D0,1.51617058D0,1.527105276D0,1.544836005D0,1.5
     &4626957D0,2.00446993D0,2.013971065D0,2.023472195D0,2.03170179D0,2.
     &04120292D0,2.04263649D0,2.05086608D0,2.05893365D0,2.060367214D0,2.
     &54707097D0,2.56480169D0,3.043437889D0,3.052939019D0,3.070669746D0,
     &0.4799077277D0,0.4867037566D0,0.5051513D0,
     &0.506584798D0,16*9.0D0/
C
      IR=5
      IW=7
      IC=43
      PRINT '(''     '')'
      PRINT '('' TIRA  - TIDAL ANALYSIS BY HARMONIC METHOD'')'
      PRINT '('' ****''/)'
      OPEN(5,FILE=input,STATUS='OLD',ERR=974)
      OPEN(7,FILE=output,STATUS='UNKNOWN',ERR=975)
C
      READ(IR,1056)
      READ(IR,1020) FILEIN
C      WRITE(6,*)
C      WRITE(6,*) ' INPUT DATA FILE  = ',FILEIN
      READ(IR,1056)
      READ(IR,1020) FILEOUT
 1020 FORMAT(A)
C      WRITE(6,*) ' OUTPUT DATA FILE = ',FILEOUT
      OPEN(10,FILE=FILEIN,STATUS='OLD',ERR=972)
      OPEN(12,FILE=FILEOUT,STATUS='UNKNOWN',ERR=973)
C
      RAD=0.174532925199433D-1
      RADI=57.29577951308232D0
      TWOPI = 360.D0/RADI
C
C**** READ CONTROL CARDS
C**** FILL GAP IN TIDAL RECORD WITH PREDICTIONS..
C****          .. FROM SUCCESSIVE TIDAL ANALYSES.
C**** NGIV = NO. OF GIVEN CONSTITUENTS (=0)
C**** NREL = NO. OF RELATED (0 TO 20)
C**** NSIG = NO. OF MAJOR CONSTITUENTS (<120)
C**** NODD = NO. OF ODD CONSTITUENTS (0)
C**** IYS & IDS ARE YEAR &DAY OF START OF DATA
C**** IRECS & IRECE ARE START & END RECORDS FOR ANALYSIS PURPOSES.
C****               THIS SHOULD NORMALLY SPAN THE GAP.
C**** JOBS,JPRED & JRES ARE CHANNELS CONT OBS,PRED AND RES
C**** IF JPRED = 0 NO PREDS ARE PRODUCED IN FILE
C**** IF JRES = 0 NO RESIDUALS ARE PRODUCED IN FILE
      READ(IR,1056)
 1056 FORMAT(80A1)
      READ(IR,*) NREL,NSIG,IRECS,IRECE,JOBS,JPRED,JRES
C 1000 FORMAT(I2,1x,I2,I10,I10,3I3)
C
c      WRITE(6,*)
c      WRITE(6,*) ' NO. OF RELATED CONSTITUENTS     = ',NREL
c      WRITE(6,*) ' NO. OF MAJOR CONSTITUENTS       = ',NSIG
c      WRITE(6,*) ' START RECORD FOR ANALYSIS       = ',IRECS
c      WRITE(6,*) ' END   RECORD FOR ANALYSIS       = ',IRECE
c      WRITE(6,*) ' CHANNEL CONTAINING OBSERVATIONS = ',JOBS
c      WRITE(6,*) ' CHANNEL FOR PREDICTED VALUES    = ',JPRED
c      WRITE(6,*) ' CHANNEL FOR RESIDUAL VALUES     = ',JRES
c      WRITE(6,*)
C
      JOBS = JOBS - 5
      JRES = JRES - 5
      JPRED = JPRED - 5
      NGIV=0
      NODD=0
      IF (NSIG.GT.120) GOTO 1112
      IF (NREL.GT.20) GOTO 1112
      IF (NGIV.GT.10) GOTO 1112
      IF (NODD.GT.20) GOTO 1112
      GOTO 1114
 1112 PRINT '(/'' CONTROL CARD ERROR. EXCESS BLOCKS OR CONST''/)'
      STOP
 1114 CONTINUE
C
C**** READ GIVEN CONSTITUENTS
      IF (NGIV.LE.0) GOTO 11
      DO 10 I=1,NGIV
      READ(IR,1002) CONG(I),SIG(I),HGIV(I),GGIV(I)
 1002 FORMAT(A6,6X,F12.7,F12.2,F12.2)
      SIG(I)=SIG(I)*RAD
   10 GGIV(I)=GGIV(I)*RAD
C
C**** READ RELATED CONSTITUENTS
   11 IF (NREL.LE.0) GOTO 13
      DO 12 I=1,NREL
      READ(IR,1004) CONRL(I),CONRF(I),SIG(NGIV+I),SIGD(I),ALPHA(I),
     &              BETA(I)
 1004 FORMAT(2A6,2F12.7,F12.4,F12.3)
      SIG(NGIV+I)=SIG(NGIV+I)*RAD
      SIGD(I)=SIGD(I)*RAD
   12 BETA(I)=BETA(I)*RAD
C
C**** READ MAJOR CONSTITUENTS
   13 J=NGIV + NREL
      DO 14 I=1,NSIG
      READ(IR,1006) CON(I),SIG(J+I)
 1006 FORMAT(A6,F13.7)
   14 SIG(J+I)=SIG(J+I)*RAD
C      PRINT '('' READING MAJOR CONSTITUENTS...'')'
C
C**** READ ODD CONSTITUENTS
      IF (NODD.EQ.0) GOTO 17
      DO 15 I=1,NODD
      READ(IR,1008) SIGODD(I),FSTART(I),USTART(I),VSTART(I),FGRAD(I),
     &              UGRAD(I)
 1008 FORMAT(6F12.7)
      SIGODD(I)=SIGODD(I)*RAD
      USTART(I)=USTART(I)*RAD
      UGRAD(I) =UGRAD(I)*RAD
   15 VSTART(I)=VSTART(I)*RAD
C
   17 CONTINUE
      SC = NGIV + NREL
      SB = NSIG + NREL
      SA = SB   + NGIV
      IF (SA.LE.120) GOTO 19
      PRINT '(/'' NO OF CONST EXCEEDS 120'')'
      STOP
   19 CONTINUE
C
      N1=2*NSIG
      N2= N1+2*NREL
      N3= N1+1
      CALL FIRST      (N1,N2,N3,SA,TS,TE,HDD,G,WROW,ROW,ROW1,ROW2)
      STOP
  972 WRITE(6,*) 'ERROR OPENING INPUT FILE = ',FILEIN
      STOP
  973 WRITE(6,*) 'ERROR OPENING OUTPUT FILE = ',FILEOUT
      STOP
  974 PRINT '('' INPUT CONTROL FILE COULD NOT BE OPENED'')'
      STOP
  975 PRINT '('' PRINT FILE COULD NOT BE OPENED'')'
      STOP
      END
      SUBROUTINE FIRST(N1,N2,N3,SA,TS,TE,H,G,WROW,ROW,ROW1,ROW2)
      INTEGER B,SA,SB,SC,PIV,TEST1,TEST2,ROWT
      REAL*8 W1,W2,W3,W4,W5,W6,W7,W8,HH,CN,P,S,DIFF,CM,QM,SM,CP,QP,SP,
     &       RAD,RADI,RJ,DEV,AV,SD1,AV1,DELT,HTP,HTR,HTO
      REAL*8 V(120),SIG(120),SIGODD(20),SIGD(20),C(120),X(240),
     &       Y(240),CONG(10),CONRL(20),CONRF(20),CON(120),XS(240)
      REAL*8 TWOPI,ARG,ARG1,WT,DT
      DIMENSION F(120),U(120),HGIV(10),GGIV(10),ALPHA(20),BETA(20),
     &FSTART(20),USTART(20),FGRAD(20),UGRAD(20),VSTART(20),D(120)
     &,HT(6000),VINIT(120),FOR(19),TS(10000),TE(10000),H(120),G(120),
     &TIT(80),WROW(N3),ROW(N1,N3),ROW1(N2),ROW2(N2),PIV(240)
     &,STN(5),COMM(20),LREC(10000),NREC(10000),HDATA(5)
      CHARACTER*1 HDR(20,80)
C
      COMMON /FR/W1,W2,W3,W4,W5,W6,W7,W8,HH,CN,P,S,DIFF,NODD,NREL,NSIG
      COMMON /SE/ SIG,SIGODD,U,F,FSTART,USTART,FGRAD,UGRAD,D,NGIV
      COMMON /TH/V,SIGD,VINIT,HGIV,GGIV,ALPHA,BETA,VSTART,HT,SB,SC
      COMMON /FO/ C
      COMMON /CO/ CONG,CONRL,CONRF,CON,RAD,RADI,IYS,IDS,IRECS,IRECE
      COMMON /EO/ TWOPI,JOBS,JPRED,JRES
C
      IR=5
      IW=7
      ROWT=0
      DO 3 I=1,N1
    3 Y(I)=0.0D0
C
C      WRITE(6,*)'READING INPUT DATA TO CALCULATE DELT...'
C
C NOTE THAT YEARS WITHIN THIS JOB ARE IN THE RANGE -99 TO 200 FOR 1801
C TO 2100 RESPECTIVELY. THIS IS FLAGGED BY THE 'CC' COMMENT CARDS BELOW
C
C**** READ FILE AND IDENTIFY IYS,IDS AND DELT
C
C     CALCULATE AN APPROX VALUE OF DELT
      DO 4 L1 = 1,20
    4 READ(10,1011) (HDR(L1,L2),L2=1,80)
      READ(10,1030) IREC,INDX,IY,ID,RHOUR
CC
      IF(IY.LT.1801.OR.IY.GT.2100) THEN
        WRITE(6,*) 'YEAR VALUE OUT OF ALLOWED RANGE = ',IY
        STOP
      ENDIF
      IY=IY-1900
C
      IYC = IY
      IDC = ID
      HRC = RHOUR
      READ(10,1030) IREC,INDX,IY,ID,RHOUR
CC
      IF(IY.LT.1801.OR.IY.GT.2100) THEN
        WRITE(6,*) 'YEAR VALUE OUT OF ALLOWED RANGE = ',IY
        STOP
      ENDIF
      IY=IY-1900
C
      CALL DTCHK(IYC,IDC,HRC,IY,ID,RHOUR,DELT)
      REWIND 10
C
C      WRITE(6,*)
c 	WRITE(6,*) 'TWENTY HEADER LINES FROM INPUT FILE FOLLOW...'
C
      DO 5 L1 = 1,20
      READ(10,1011) (HDR(L1,L2),L2=1,80)
 1011 FORMAT(80A1)
    5 rohith=1
C     PRINT 1012,L1,(HDR(L1,L2),L2=1,80)
 1012 FORMAT(1X,I2,'.',80A1)
C      WRITE(6,*) '...TWENTY HEADER LINES FROM INPUT FILE SHOWN ABOVE'
C
      READ(10,1030) IREC,INDX,IY,ID,RHOUR
CC
      IF(IY.LT.1801.OR.IY.GT.2100) THEN
        WRITE(6,*) 'YEAR VALUE OUT OF ALLOWED RANGE = ',IY
        STOP
      ENDIF
      IY=IY-1900
C
      IYC = IY
      IDC = ID
      HRC = RHOUR
      IYS=IY
      IDS=ID
      CALL SHPN(IY,ID,S,HH,P,CN,P1)
      CALL VSET(S,HH,P,P1,D)
C
C**** CALC VINIT FOR EACH CONST IN CORRECT ORDER
C     VINIT IS EQUIL PHASE FOR 0 HRS IYS,IDS
      DO 825 I=1,SA
      IF (SIG(I).LT.2.E-6) GOTO 826
      DO 821 J=1,120
      DIFF = DABS(SIG(I)-C(J))
      IF (DIFF - 2.E-6) 820,821,821
  820 VINIT(I) = D(J)
      GOTO 825
  821 CONTINUE
      IF (NODD.EQ.0) GOTO 824
      DO 823 J=1,NODD
      DIFF = DABS(SIG(I) - SIGODD(J))
      IF (DIFF - 2.E-6) 822,823,823
  822 VINIT(I) = VSTART(J)
      GOTO 825
  823 CONTINUE
  824 WRITE(IW,8024) I
 8024 FORMAT(' V FOR CONST NO', I5,'  SET TO ZERO')
  826 VINIT(I) = 0.
  825 CONTINUE
C
C      WRITE(IW,8025) JOBS,JPRED,JRES
C      PRINT 8025,JOBS,JPRED,JRES
C 8025 FORMAT(3I6)
C
C**** CALCULATE DELT
  830 IF (IREC.EQ.IRECS) GOTO 831
      READ(10,1030,END=836) IREC,INDX,IY,ID,RHOUR
C
CC
      IF(IY.LT.1801.OR.IY.GT.2100) THEN
        WRITE(6,*) 'YEAR VALUE OUT OF ALLOWED RANGE = ',IY
        STOP
      ENDIF
      IY=IY-1900
C
      CALL DTCHK(IYC,IDC,HRC,IY,ID,RHOUR,DT)
      IYC = IY
      IDC = ID
      HRC = RHOUR
      IF (ABS(DT).LT.1.5*DELT) GOTO 830
 8311 WRITE(6,*) 'TIMING ERROR NEAR RECORD',IREC,DELT,DT
      STOP
  831 IYA = IY
      IDA = ID
      HRA = RHOUR
  832 READ(10,1030,END=836) IREC,INDX,IY,ID,RHOUR
C
CC
      IF(IY.LT.1801.OR.IY.GT.2100) THEN
        WRITE(6,*) 'YEAR VALUE OUT OF ALLOWED RANGE = ',IY
        STOP
      ENDIF
      IY=IY-1900
C
C     CHECK INTERMEDIATE VALUES OF DELT TO DETECT TIME ERRORS
      CALL DTCHK(IYC,IDC,HRC,IY,ID,RHOUR,DT)
      IYC = IY
      IDC = ID
      HRC = RHOUR
      IF (ABS(DT).GT.1.5*DELT) GOTO 8311
      IF (IREC.NE.IRECE) GOTO 832
      IYB = IY
      IDB = ID
      HRB = RHOUR
      L = 0
  834 IF (IYA.EQ.IYB.AND.IDA.EQ.IDB) GOTO 835
      CALL UDATF(IYA,IDA,IYA,IDA,1)
      L = L + 1
      GOTO 834
  836 PRINT '('' END OF FILE FOUND PREMATURELY'')'
      STOP
  835 DELT = (L*24.0 + HRB - HRA)/FLOAT(IRECE - IRECS)
C     CHECK TO EOF
  837 READ(10,1030,END=838) IREC,INDX,IY,ID,RHOUR
C
CC
      IF(IY.LT.1801.OR.IY.GT.2100) THEN
        WRITE(6,*) 'YEAR VALUE OUT OF ALLOWED RANGE = ',IY
        STOP
      ENDIF
      IY=IY-1900
C
      CALL DTCHK(IYC,IDC,HRC,IY,ID,RHOUR,DT)
      IYC = IY
      IDC = ID
      HRC = RHOUR
      IF (ABS(DT).GT.1.5*DELT) GOTO 8311
      GOTO 837
 838  NMAX = FLOAT(59*24)/DELT +0.5
      IF (NMAX.GT.59*24*4) NMAX = 59*24*4
      HTSE = -1.E20
      REWIND 10
C
      PRINT 1029,DELT
      WRITE(IW,1029) DELT
 1029 FORMAT(' SAMPLE INTERVAL (HOURS) = ',F8.3)
C
      J1=0
      RJ=0.0D0
      IY=IYS
      ID=IDS
      IDT=0
      AV1=0.0D0
      SD1=0.0D0
      I=0
C
C      PRINT '('' RE-READING DATA INTO DATA VECTOR...'')'
      DO 498 L1 = 1,20
  498 READ(10,1011) (HDR(L1,L2),L2=1,80)
 1030 FORMAT(I7,I2,I5,I4,F7.3,5F8.2)
  499 CONTINUE
C
  500 CONTINUE
C
C*****START DATA BLOCKS AT 1
C     IF MORE THAN 59 DAYS GENERATE NEW DATA BLOCK.
C     IF INDEX = 1 START A NEW BLOCK
C
      B = 1
      NBLOCK = 1
      I = 0
      L = 0
      IY = IYS
      ID = IDS
C
  505 I = I + 1
  504 READ(10,1030) IREC,INDX,LYEAR,LDAY,RHOUR,HDATA
C
CC
      IF(LYEAR.LT.1801.OR.LYEAR.GT.2100) THEN
        WRITE(6,*) 'YEAR VALUE OUT OF ALLOWED RANGE = ',LYEAR
        STOP
      ENDIF
      LYEAR=LYEAR-1900
C
      IF (IREC.LT.IRECS) GOTO 504
      IF (I.EQ.1.AND.INDX.NE.0) GOTO 504
      HT(I)= HDATA(JOBS)
  506 IF (IY.EQ.LYEAR.AND.ID.EQ.LDAY) GOTO 5066
      CALL UDATF(IY,ID,IY,ID,1)
      L = L + 1
      GOTO 506
 5066 IF(I.EQ.1) LREC(B) = IREC
      IF (I.EQ.1) TS(B) = L*24 + RHOUR
      IF(IREC.EQ.IRECE) GOTO 510
      IF (INDX.EQ.1) GOTO 510
      IF(I.LT.NMAX) GOTO 505
C
  510 TE(B) = L*24 + RHOUR
      IF (INDX.EQ.1) TE(B) = TE(B) - DELT
      NREC(B) = IREC
      IF (INDX.EQ.1) NREC(B) = IREC - 1
c      PRINT 1008,B,LREC(B),NREC(B)
      WRITE(IW,1008) B,LREC(B),NREC(B)
 1008 FORMAT(' BLOCK NO',I6,'   RECORD',I8,'   TO RECORD',I8)
c      PRINT 1009,TS(B),TE(B)
      WRITE(IW,1009) TS(B),TE(B)
 1009 FORMAT('                      TS',F8.1,'        TE',F8.1)
      N4 = NREC(B) - LREC(B) + 1
      IF (TS(B).LT.HTSE + 1416.) GOTO 5067
      HTSE = TS(B)
      CALL FUSET(HTSE,SA)
 5067 DO 5068 J = 1,SA
      ARG = VINIT(J) + SIG(J) * TS(B)
      CALL PRINR(ARG)
 5068 V(J) = ARG
      IF(IREC.LT.IRECE) B = B + 1
C
C
C
C**** REMOVE GIVEN CONSTITUENTS FROM DATA
      W1 = 0.0D0
      DO13 J =1, N4
      J1=J1+1
      IF (NGIV.EQ.0) GOTO 133
      DO 12 K = 1,NGIV
      ARG = V(K) + U(K) - GGIV(K) +W1*SIG(K)
      CALL PRINR(ARG)
      ARG = ARG - TWOPI
   12  HT(J)=HT(J)-F(K)*HGIV(K)*DCOS(ARG)
      W1=W1 + DELT
  133 AV1=AV1 + HT(J)
      SD1=SD1 + HT(J)*HT(J)
   13 CONTINUE
C
C**** GENERATE VECTOR IN CO-DOMAIN
      DO 17 J=1,NSIG
      W1=0.0D0
      W2=0.0D0
      W3=0.0D0
      JJ =J +NGIV +NREL
      W4=2.0D0*DCOS(SIG(JJ)*DELT)
      K =N4+1
14    K =K-1
      W8=HT(K)
      W1=W8 + W2*W4 - W3
      W3 = W2
      W2 = W1
      IF (K-1)15,15,14
15    ARG1 = V(JJ)+U(JJ)
      W5 = DCOS(ARG1)
      W6 = DSIN(ARG1)
      W7=DSIN(SIG(JJ)*DELT)
      Y(2*J-1)=Y(2*J-1)+F(JJ)*(W5*(W1-0.5*W3*W4)-W6*W3*W7)
       Y(2*J)= Y(2*J)+F(JJ)*(W5*W3*W7 +W6*(W1-0.5*W3*W4))
      IF (SIG(JJ).GE.0.000002) GO TO 17
      Y(2*J)=0.0
16    ROWT =2*J
17    CONTINUE
      RJ=RJ+N4
      IF(NBLOCK.EQ.B) GOTO 520
      NBLOCK = NBLOCK + 1
      I = 0
      GOTO 505
C
  520 CONTINUE
C
C      PRINT '('' ALL DATA ENTERED'')'
C
      AV1=AV1/RJ
      SD1=DSQRT(SD1/RJ - AV1*AV1)
C
      PRINT 2070,AV1,SD1,DELT
      WRITE(IW,2070) AV1,SD1,DELT
 2070 FORMAT(/' INITIAL MEAN       = ',D20.6,/,
     &        ' STANDARD DEVIATION = ',D20.6,/,
     &        ' DELT               = ',D20.6)
C
C
C**** GENERATE MATRIX ELEMENTS
C      PRINT '('' GENERATING MATRIX ELEMENTS...'')'
      TEST1=1
      NSC = SC+1
      DO 36 I = NSC,SA
      ISB=2*SB
      DO 19 J=1,ISB
      ROW1(J) = 0
19    ROW2(J) =0
      HTSE = -1.E20
      DO 28 J =1, B
C     RE-CALC F U EVERY 59 DAYS
      IF (TS(J).LT.HTSE+1416.) GOTO 193
      HTSE = TS(J)
      CALL FUSET (HTSE, SA)
C     CALCULATIONS OF V
  193 DO 191 K =1, SA
      ARG = VINIT(K) + SIG(K)*TS(J)
      CALL PRINR(ARG)
      V(K) = ARG
  191 CONTINUE
      NGIV1=NGIV+1
      DO 27 K=NGIV1,SA
      W1=(SIG(I) - SIG(K))*DELT
      W2=(SIG(I) + SIG(K))*DELT
      W3 = V(I) + U(I)
      W4 = V(K) + U(K)
      W5=(TE(J) - TS(J))/DELT
      IF (DABS(W1) - 2.D-6*DELT) 20,21,21
20    QM = W5 +1
      GO TO 22
21    QM = (DSIN(0.5*W1*(W5 + 1)))/ DSIN(0.5*W1)
22    CM = QM*DCOS(W3-W4+0.5*W1*W5)
      SM = QM*DSIN(W3-W4+0.5*W1*W5)
      IF (DABS(W2) - 2.0D-6*DELT) 23,24,24
23    QP = W5+1
      GO TO 25
24    QP = (DSIN(0.5*W2*(W5+1)))/DSIN(0.5*W2)
25    CP = QP*DCOS(W3+W4+0.5*W2*W5)
      SP = QP*DSIN(W3+W4+0.5*W2*W5)
      KN = 2*(K-NGIV)-1
      ROW1(KN)   = ROW1(KN)+ 0.5 *F(K)*F(I)*(CP+CM)
      ROW1(KN+1) = ROW1(KN+1)+0.5*F(K)*F(I)*(SP-SM)
      ROW2(KN) = ROW2(KN) +0.5*F(K)*F(I)*(SP+SM)
27    ROW2(KN+1) =ROW2(KN+1)+0.5*F(K)*F(I)*(CM-CP)
28    CONTINUE
      IF (NREL.LE.0) GOTO 35
      DO 31 J=1 ,  NREL
      DO 30 K=1,NSIG
      KN = K+NGIV+NREL
      DIFF= DABS(SIGD(J)-SIG(KN))
      IF (DIFF-0.000002) 29,30,30
29    KN = 2*(NREL+K)-1
      W1 = ALPHA(J)
      W2 = W1* COS(BETA(J) )
      W3 = W1* SIN(BETA(J) )
      ROW1(KN)=ROW1(KN)+W2*ROW1(2*J-1)+W3*ROW1(2*J)
      ROW1(KN+1) = ROW1(KN+1)-W3*ROW1(2*J-1)+ W2*ROW1(2*J)
      ROW2(KN)= ROW2(KN)+W2*ROW2(2*J-1)+W3*ROW2(2*J)
      ROW2(KN+1) = ROW2(KN+1)- W3*ROW2(2*J-1)+W2*ROW2(2*J)
30    CONTINUE
31    CONTINUE
   35 K=I-NGIV-NREL
      W1= 0
      W2= 0
      DO 32 J = 1, N1
      KN = 2*NREL + J
      ROW(2*K-1,J) = ROW1(KN)
      ROW(2*K,J)= ROW2(KN)
      W1 = W1+ ABS(ROW(2*K-1,J))
32    W2 = W2+ ABS (ROW(2*K,J) )
      W1=W1/2.
      W2=W2/2.
      ROW(2*K-1,N3) = Y(2*K-1)
      ROW(2*K,N3) = Y(2*K)
      IF (W1.LE. ABS(ROW(2*K-1,2*K-1) )) GO TO 33
      TEST1 =-1
33    IF( SIG(I).GE.0.000002)  GO TO 34
      ROW(2*K,2*K) = 1.0
      GO TO 36
34    IF (W2.LE. ABS(ROW(2*K,2*K)))GO TO 36
      TEST1 =-1
36    CONTINUE
C
      READ (5,110) TIT
110   FORMAT (20A4)
C
C
      IT = 0
      IF (TEST1.LT.0) GO TO 48
C
C**** GAUSS SEIDEL METHOD
C      PRINT '('' SOLVING BY GAUSS SEIDEL...'')'
      DO 37 I = 1,N1
37    X(I) =0.0
38    TEST2 = 1
      DO 42 I = 1,N1
      W1 = ROW(I,N3)+ROW(I,I)*X(I)
      DO 40 J = 1,N1
40    W1 =W1 -ROW(I,J)* X(J)
      DIFF = DABS(X(I)-W1/ROW(I,I))
      IF (DIFF.GT.0.01) TEST2 =-1
      X(I) = W1/ROW(I,I)
      IF ( I.EQ.ROWT)X(I)=0
42    CONTINUE
      IF (TEST2)  38,50,50
C
44    PRINT '('' MATRIX IS TO ILL-CONDITIONED TO BE SOLVED'')'
      RETURN
C
C**** GAUSS PIVOTAL METHOD
   48 PRINT '('' SOLVING BY PIVOTAL CONDENSATION...'')'
      CALL LINEQU(N3,N1,ROW,Y,ROW1,PIV,IT,IFAIL)
      IF (IFAIL.NE.0) GOTO 44
      DO 49 I = 1,N1
   49 X(I) = Y(I)
   50 CONTINUE
      DO 56 I=1,NSIG
      J=2*I-1
      XS(J)=X(J)
   56 XS(J+1)=X(J+1)
C
C**** CALCULATE MAJOR AND RELATED CONSTITUENTS
      NSC=SC+1
      J=-1
      DO 57 I=NSC,SA
      J=J+2
      K=2*I-1
      W1=XS(J)
      W2=XS(J+1)
      X(K)=DSQRT(W1*W1 + W2*W2)
      H(I) = 0.0
      G(I)=0.0
      IF (DABS(W1).LT.1.D-20.AND.DABS(W2).LT.1.D-20) GOTO 57
      X(K+1)=DATAN2(W2,W1)
      H(I)=X(K)
      G(I)=X(K+1)*RADI
  571 IF (G(I)) 572,573,573
  572 G(I)=G(I) + 360.0
      GOTO 571
  573 IF (G(I)-360.0) 57,574,574
  574 G(I)=G(I) - 360.0
      GOTO 573
   57 CONTINUE
C
      IF (NREL.LE.0) GOTO 64
      DO 63 I=1,NREL
      K=2*(NGIV+I) - 1
      KN=NGIV + I
      DO 63 J=NSC,SA
      DIFF=DABS(SIG(J) - SIGD(I))
      IF (DIFF.GE.0.000002) GOTO 63
      JJ=2*J-1
      X(K)=ALPHA(I)*X(JJ)
      X(K+1)=(X(JJ+1) + BETA(I))*RADI
   58 IF (X(K+1)) 59,60,60
   59 X(K+1)=X(K+1) + 360.0D0
      GOTO 58
   60 IF (X(K+1)-360.0D0) 62,61,61
   61 X(K+1)=X(K+1) - 360.0D0
      GOTO 60
   62 H(KN)=X(K)
      G(KN)=X(K+1)
   63 CONTINUE
C
C**** GENERATE PREDICTIONS & RESIDUALS IN OUTPUT FILE
   64 rohith=1
C	PRINT '('' TRANFERRING DATA TO SECONDARY FILE...'')'
      IF (JPRED.GT.0.AND.JPRED.EQ.JOBS)
     &PRINT '(''......GAPS ARE INTERPOLATED WITH PREDICTIONS'')'
      IF (JPRED.GT.0.AND.JPRED.NE.JOBS)
     &PRINT '(''......PREDICTIONS ARE GENERATED'')'
      IF (JRES.GT.0)
     &PRINT '(''......RESIDUALS ARE GENERATED'')'
      J1=0
      RJ=0.0D0
      AV=0.0D0
      DEV=0.0D0
      K1=NGIV+1
      DO 644 I=1,N1
  644 Y(I)=0.0D0
      REWIND 10
      REWIND 12
C
      HTSE = -1.E20
      RJ = 0
      DO 649 L1=1,20
      READ(10,1011) (HDR(L1,L2),L2=1,80)
  649 WRITE(12,1011) (HDR(L1,L2),L2=1,80)
      READ(10,1030) IREC,INDX,LYEAR,LDAY,RHOUR,HDATA
C
CC
      IF(LYEAR.LT.1801.OR.LYEAR.GT.2100) THEN
        WRITE(6,*) 'YEAR VALUE OUT OF ALLOWED RANGE = ',LYEAR
        STOP
      ENDIF
      LYEAR=LYEAR-1900
C
      WT = RHOUR
      HTO = HDATA(JOBS)
      GOTO 652
  650 READ(10,1030,END=82) IREC,INDX,LYEAR,LDAY,RHOUR,HDATA
CC
      IF(LYEAR.LT.1801.OR.LYEAR.GT.2100) THEN
        WRITE(6,*) 'YEAR VALUE OUT OF ALLOWED RANGE = ',LYEAR
        STOP
      ENDIF
      LYEAR=LYEAR-1900
C
      HTO = HDATA(JOBS)
      WT = WT + DELT
  652 IF (DABS(WT-TS(1)).LT.1.D-6) GOTO 653
      IF (WT.LT.HTSE + 1416.0) GOTO 654
  653 HTSE=WT
      CALL FUSET(HTSE,SA)
  654 HTP = 0.0D0
      DO 656 K=K1,SA
      ARG = VINIT(K) + U(K) - G(K)*RAD + WT*SIG(K)
      CALL PRINR(ARG)
  656 HTP = HTP + F(K)*H(K)*DCOS(ARG)
      HTR = HTO - HTP
      IF (JRES.GT.0) THEN
        HDATA(JRES) = HTR
        IF (INDX.GT.0) HDATA(JRES) = 0
      ENDIF
C
C****** REPLACE OBSERVATIONS AT GAPS WITH PREDICTIONS IF
C          JPRED=JOBS ELSE GENERATE ALL PREDICTIONS
      IF(JPRED.EQ.JOBS.AND.INDX.EQ.0) GOTO 658
      HTO = HTP
      IF (JPRED.GT.0) HDATA(JPRED) = HTP
      IF (JPRED.GT.0.AND.JPRED.EQ.JOBS)
     &WRITE(6,1031) IREC
 1031 FORMAT(' GAP INTERPOLATED AT RECORD  ',I6)
      IF (JPRED.EQ.JOBS.AND.JRES.GT.0) HDATA(JRES) = 0
C
C OUTPUT FILE WRITTEN IN TASK-2000 FORMAT
C
 658  WRITE(12,1030) IREC,INDX,LYEAR+1900,LDAY,RHOUR,HDATA
C
      IF(INDX.EQ.0) THEN
        AV=AV + HTR
        DEV=DEV + HTR*HTR
        RJ = RJ + 1.0D0
      ENDIF
C
      GOTO 650
C
   82 AV=AV/RJ
      DEV=DSQRT(DEV/RJ - AV*AV)
C
C
C**** OUTPUT FINAL RESULTS
   90 IF (TEST1.LT.0) GOTO 91
      WRITE(IW,4006) TIT
 4006 FORMAT('1******** T.I.R.A.  (G.S.) ********'/(1X,20A4))
      GOTO 92
   91 WRITE(IW,4002) TIT
 4002 FORMAT('1******** T.I.R.A.  (G.P.) ********'/(1X,20A4))
   92 CONTINUE
      WRITE(IW,4004) AV1,SD1,AV,DEV
 4004 FORMAT(' OBS M=',D11.4,'  SD=',D11.4,'   RES M=',D11.4,'  SD=',D11
     &.4)
C
C
  923 IF (NGIV.EQ.0) GOTO 94
      DO 93 I=1,NGIV
      SIG(I)=SIG(I)*RADI
   93 GGIV(I)=GGIV(I)*RADI
      WRITE(IW,4010) NGIV
 4010 FORMAT(//' GIVEN CONSTITUENTS',6X,'NGIV=',I4/' ------------------'
     &//' NO',4X,'NAME',8X,'SPEED',11X,'H',10X,'G'/' --',4X,'----',8X,'-
     &----',10X,'---',8X,'---'/)
      WRITE(IW,4011) (I,CONG(I),SIG(I),HGIV(I),GGIV(I),I=1,NGIV)
 4011 FORMAT(' ',I3,A7,F16.7,F12.4,F11.3)
C
   94 IF (NREL.LE.0) GOTO 96
      WRITE(IW,4020)
 4020 FORMAT(//' RELATED CONSTITUENTS'/' --------------------  '/' NO',4
     &X,'REL',5X,'REF',8X,'SPEED',11X,'H',10X,'G'/' --',4X,'CONST',3X,'C
     &ONST',6X,'-----',10X,'---',8X,'---'/)
      NSC=NGIV+1
      J=0
      DO 951 I=NSC,SC
      J=J+1
      SIG(I)=SIG(I)*RADI
      WRITE(IW,4021) J,CONRL(J),CONRF(J),SIG(I),H(I),G(I)
 4021 FORMAT(' ',I2,A9,A8,F14.7,F12.4,F11.3)
  951 CONTINUE
C
   96 WRITE(IW,4030) NSIG
 4030 FORMAT(//' MAJOR CONSTITUENTS ',6X,'NSIG=',I5/' ------------------
     &'/'  NO',4X,'NAME',8X,'SPEED',11X,'H',10X,'G'/'  --',4X,'----',8X,
     &'-----',10X,'---',8X,'---'/)
      NSC=SC+1
      J=0
      DO 971 I=NSC,SA
      J=J+1
      SIG(I)=SIG(I)*RADI
      WRITE(IW,4011) J,CON(J),SIG(I),H(I),G(I)
  971 CONTINUE
      RETURN
      END
      SUBROUTINE LINEQU(N3,N,ROW,Y,Q,PIV,IT,IFAIL)
      INTEGER PIV
     &,N,I,J,K,IM
      REAL*8 S,T,ST,Y(N)
      DIMENSION PIV(N)
     &,ROW(N,N3),Q(N)
C     NO CHANGE HAS BEEN MADE IN THIS SUBROUTINE
C     REGARDING DOUBLE PRECISION.
      IFAIL=0
      IF (IT.GT.1) GOTO 36
      DO 14 I = 1, N
      T =0
      DO 10 J =1,N
      S = ABS( ROW(I,J) )
      IF (S.GT.T) T = S
10    CONTINUE
      IF(T-0.0)12,11,12
11    IFAIL=1
      RETURN
12    T = 1.0/T
      Q(I)= T
      DO 13 J = 1,N
13    ROW(I,J)= ROW(I,J)*T
14    CONTINUE
C      END OF EQUILIBRATION..
      DO 34 K = 1,N
      T=0
      DO 20 I = K,N
      S= ROW(I,K)
      IF (K.EQ.1) GO TO 18
      K1 = K-1
      DO 16 J =1, K1
      ST = ROW(I,J)
16    S = S-ST*ROW(J,K)
18    ROW(I,K) = S
      IF (DABS(S).LE.T) GO TO 20
      T = DABS(S)
      IM = I
20    CONTINUE
      IF (T.GT.10.E-16) GO TO 22
21    IFAIL=1
      RETURN
22    PIV(K) = IM
      IF(IM.EQ.K) GO TO 27
      DO 26 J = 1,N
      T =ROW(K,J)
      ROW(K,J)= ROW(IM,J)
26    ROW(IM,J)=T
27    S = ROW(K,K)
      S = 1.0/S
      K2=K+1
      IF (K .GE. N) GO TO 34
      DO 28 I = K2 , N
28    ROW(I,K)= ROW(I,K)*S
      DO 32 I = K2,N
      S= ROW(K,I)
      IF (K.EQ.1) GO TO 32
      DO 30 J = 1 ,K1
      ST = ROW(K,J)
30    S  = S-ST*ROW(J,I)
32    ROW(K,I) = S
34    CONTINUE
C      END OF TRIANGULARISATION
36    DO 38 K = 1,N
38    Y(K) = Y(K) * Q(K)
      DO 42 K = 1,N
          KPIV=PIV(K)
      T = Y(KPIV)
      Y(KPIV) = Y(K)
      IF (K.EQ.1)GO TO 42
      K1=K-1
      DO 40 I = 1, K1
40    T=T-ROW(K,I)*Y(I)
42    Y(K) = T
      K = N+1
46    K = K-1
      T = Y(K)
      IF (K-N) 47, 50, 50
47    K2 = K+1
      DO 48 I = K2,N
48    T=T-ROW(K,I)*Y(I)
50    Y(K) = T/ROW(K,K)
      IF (K.GT.1) GO TO 46
      RETURN
      END
      SUBROUTINE UDATF(YR,DAY,YRN,DAYN,INCR)
C
C VERSION OF UDATF BY P.L.WOODWORTH MAY 1996.
C THE OLDER VERSION OF THIS ROUTINE DID NOT INCREMENT CORRECTLY FOR YEARS
C IN THE RANGE 1801-1900. JOB 'udatftest.f' CAN BE USED TO COMPARE THEM.
C NOTE THAT NOWHERE IN TIRA DOES UDATF SEEM TO INCREMENT BY OTHER THAN 1 DAY.
C
      INTEGER YR,YRN,DAY,DAYN
C
      IF(INCR.NE.1) THEN
        WRITE(6,*) ' S/R UDATF: INCR IS NOT ONE = ',INCR
        STOP
      ENDIF
C
C LEAP YEAR OR NOT LEAP YEAR (ILEAP=366/365) AND BEWARE 1900 WAS NOT A LEAP
C YEAR. NOTE THAT IN S/R SHPN THE YEARS WILL RESTRICT TIRA TO THE RANGE
C 1801-2100.
C
      LEAP = MOD(YR,4)
      ILEAP = 365
      IF(LEAP.EQ.0) ILEAP=366
      IF(YR.EQ.0) ILEAP=365
C
C INCREMENT THE YEAR/DAY BY ONE DAY
C
      YRN = YR
      DAYN = DAY + 1
      IF(DAYN.GT.ILEAP) THEN
         YRN = YRN + 1
         DAYN = DAYN - ILEAP
      ENDIF
C
      RETURN
      END
      SUBROUTINE VSET (S,H,P,P1,V)
      REAL*8 S,H,P
      DIMENSION V(120)
C   V 'S  ARE COMPUTED HERE.
C   V'S COMPUTED IN DEGREES.
      V(1) = H
      V(2) = H+H
      V(3) = S-P
      V(4)= S+S -H-H
      V(5) = 2*S
      V(6) =-4*S+H +2*P+ 270.0
      V(7) =-4*S+3*H +270.0
      V(8) =-3*S+H+P + 270.0
      V(9) =-3*S+3*H-P+270.0
      V(10) =-2*S+H + 270.0
      V(11) = 3.0*H-2.0*S + 90.0
      V(12)=-S+H+90.0
      V(13)=-S+3*H-P+ 90.0
      V(14)=-2*H+ P1 + 270.0
      V(15)=-H+ 270.0
      V(16) = 180.0
      V(17)= H + 90.0
      V(18)=2*H - P1 +90.0
      V(19)=3*H + 90.0
      V(20)=S-H+P+ 90.0
      V(21)=S+H-P+90.0
      V(23)=2*S+H+90.0
      V(26)=-4*S +2*H + 2*P
      V(27)=-4*(S-H)
      V(28)=-3*S +2*H +P
      V(29)=-3*S+4*H-P
      V(31)= -2*S + 2*H
      V(32) = 4.0*H - 2.0*S
      V(33)= -S+P+180.0
      V(34)= -S+2*H-P+180.0
      V(35)= -H+P1
      V(36)= 0
      V(37)= H  - P1 + 180.0
      V(38) = H+H
      V(22)=-V(10)
      V(24)=V(10)+V(8)
      V(25)=V(31)+V(28)
      V(30)=V(10)+V(15)
      V(39) = V(31) -V(28)
      V(40)=V(17)+V(21)
      V(41)=-V(31)
      V(42)=V(31)+V(10)
      V(43)=-3*(S-H)+180.0
      V(44) = V(10)
      V(45)=V(31)+V(17)
      V(46)=V(17)
      V(47)=V(31)+V(28)
      V(48)=2*V(31)
      V(49)= V(28)
      V(50)= V(31)
      V(51)=V(31)+V(38)
      V(52) = 0
      V(53)=V(38)
      V(54)=V(48)+V(28)
      V(55)=V(48)+V(31)
      V(56)=V(47)
      V(57)=V(48)
      V(58)=V(48)+V(38)
      V(59)=V(31)
      V(60)=V(51)
      V(61)=2.0*V(31)+V(28)-2.0*V(36)
      V(62) = 3.0*V(31)-V(38)
      V(63)=3.0*V(31)-2.0*V(36)
      V(64)=V(31)+V(28)+V(38)-2.0*V(36)
      V(65)=V(36)+V(28)-V(38)
      V(66)=2.0*V(36)-V(38)
      V(67)=2.0*V(31)+V(36)-2*V(28)
      V(68)=V(31)+V(8)
      V(69)=2.0*V(31)-V(15)
      V(70)=2.0*V(31)-V(8)
      V(71)=3.0*V(31)-V(38)
      V(72)=3.0*V(31)-V(36)
      V(73)=2.0*V(31)+V(36)-V(38)
      V(74)=3.0*V(31)-V(17)
      V(75) =5.0*(H-S) + 180.0
      V(76)=3.0*V(31)-V(10)
      V(77) = 2.0*(V(31)+V(28))-V(36)
      V(78)=3.0*V(31)+V(28)-V(36)
      V(79)=4.0*V(31)-V(38)
      V(80)=4.0*V(31)-V(36)
      V(81)=2.0*V(31)+V(36)+V(28)-V(38)
      V(82)=2.0*V(31)+V(29)
      V(83)=3.0*V(31)+V(36)-V(38)
      V(84)=4.0*V(31)-V(28)
      V(85)=3.0*V(31)+V(36)-V(28)
      V(86)=V(31)+V(38)+V(34)
      V(87) = 2.0*(V(31)+V(28))
      V(88)=3.0*V(31)+V(28)
      V(89)=2.0*V(48)
      V(90) = 2.0*V(31)+V(36)+V(28)
      V(91)=3.0*V(31)+V(36)
      V(92) = 3.0*V(31) + V(38)
      V(93)=V(31)+V(36)+V(28)+V(38)
      V(94)=2.0*V(31)+2.0*V(36)
      V(95)=2.0*V(31)+V(36)+V(38)
      V(96)=4.0*V(31)+V(36)
      V(97)=3.0*V(31)+2.0*V(36)
      V(98)=4.0*V(31)+V(36)+V(28)
      V(99)=5.0*V(31)+V(36)
      V(100)=4.0*V(31)+2.0*V(36)
      V(101) = 6*H-5*S-P
      V(102) = 2*H-4*S
C   V(103) , V(104) ARE CHANGED ACCORDING TO CARTWRIGHT'S NOTES
C   OF NOV. 15 1977.
      V(103) = H - 2.0*S
      V(104) = 3.0*H -2.0*S
      V(105) = S -2.0*H + P
      V(106) = 2*S
      V(107) = 6*H-7*S+P
      V(108) = 6*H-5*S-P
      V(109)= 4*H-3*S - P
      V(110) = V(34)
      V(111)= V(28) - H
      V(112) = V(28) + H
      V(113) = 3.0*H-4.0*S
      V(114) = 3.0*H-2.0*S
C    CONVERT V TO RADIANS.
      DO 30 J = 1,114
30     V(J) = V(J)/57.2957795D0
       RETURN
       END
      SUBROUTINE FUSET (T,SA)
      INTEGER SA,Q
      REAL*8 SIG(120),SIGODD(20),C(120)
      REAL*8 W1,W2,W3,W4,W5,W6,W7,W8,H,CN,P,S,SW,HW,PW,NW,DIFF
      DIMENSION U(120),F(120),FSTART(20),USTART(20),UGRAD(20),
     & FGRAD(20),A(120),B(120)
      COMMON /FR/W1,W2,W3,W4,W5,W6,W7,W8,H,CN,P,S,DIFF,NODD,NREL,NSIG
      COMMON /SE/SIG,SIGODD,U,F,FSTART,USTART,FGRAD,UGRAD,B,NGIV
      COMMON /FO/ C
C   CONVERT S,H,P,CN TO RADIANS AND ADD INCREMENTS DUE TO TIME T.
C   B'S ARE COMPUTED IN RADIANS .
      SW = 0.0958215D0*T + S/57.2957795D0
      HW = 0.0007167D0*T+  H/57.2957795D0
      PW = 0.000081018D0*T+P/57.2957795D0
      NW =-0.0000385D0*T+CN/ 57.2957795D0
      W1 = DCOS(NW)
      W2 = DCOS(2*NW)
      W3 = DCOS(3*NW)
      W4 = DSIN(NW)
      W5 = DSIN(2*NW)
      W6 = DSIN(3*NW)
      A(3)=1-0.1300*W1 + 0.0013*W2
      B(3)= 0.0
      A(5)= 1.0429+0.4135*W1-0.004*W2
      B(5)=-0.4143*W4+0.0468*W5-0.0066*W6
      A(6)=1.0089+0.1871*W1-0.0147*W2+0.0014*W3
      A(7) =A(6)
      A(8) =A(6)
      A(9) =A(6)
      A(10) =A(6)
      A(30)=A(6)
      A(44)=A(6)
      A(22)=A(6)
      B(6) =0.1885*W4 - 0.0234*W5+.0033*W6
      B(7) =B(6)
      B(9) =B(6)
      B(8)  =B(6)
      B(10) =B(6)
      B(30) =B(6)
      B(44) =B(6)
      A(17) =1.0060+0.1150*W1- 0.0088*W2 +0.0006*W3
      A(46) = A(17)
      B(17)=-0.1546*W4 + 0.0119*W5 -0.0012*W6
      B(46) = B(17)
      A(13) =1.0129 +0.1676*W1 -0.0170*W2+0.0016*W3
      A(21) =A(13)
      A(20) =A(13)
      B(13) =-0.2258*W4 +0.0234*W5 -0.0033*W6
      B(20) =B(13)
      B(21) =B(13)
      A(23) =1.1027+0.6504*W1+0.0317*W2-0.0014*W3
      B(23) = -0.6402*W4 + 0.0702*W5 - 0.0099*W6
      A(26) =1.0004 -0.0373*W1+ 0.0002*W2
      A(27) =A(26)
      A(28) =A(26)
      A(29) =A(26)
      A(31) =A(26)
      A(33) = A(26)
      A(49) =A(26)
      A(50) =A(26)
      A(4)  =A(26)
      A(41) =A(26)
      A(59) =A(26)
      B(26) = -0.0374*W4
      B(27) =B(26)
      B(28) =B(26)
      B(29) =B(26)
      B(31) =B(26)
      B(33) =B(26)
      B(49) =B(26)
      B(50) =B(26)
      B(59) =B(26)
      A(38) =1.0241+0.2863*W1+0.0083*W2 -0.0015*W3
      A(53) =A(38)
      B(38) =-0.3096*W4 + 0.0119*W5 - 0.0007*W6
      B(53) =B(38)
      W7 = 1-0.2505*DCOS(2*PW)-0.1102*DCOS(2*PW-NW)-0.0156
     &*DCOS(2*PW-2*NW)-0.037*DCOS(NW)
      W8 =-0.2505*DSIN(2*PW)-0.1102*DSIN(2*PW-NW)-0.0156*DSIN(2*PW-2*NW)
     &-0.037*DSIN(NW)
      A(34) = DSQRT(W7*W7 + W8*W8)
      B(34) = DATAN(W8/W7)
      IF(W7.LT.0) B(34) = B(34) +3.14159
      W7 = 2* DCOS(PW) +0.4* DCOS(PW-NW)
      W8 = DSIN(PW) +0.2* DSIN (PW-NW)
      A(12) = DSQRT(W7*W7 + W8*W8)
      B(12) = DATAN(W8/W7)
      IF(W7.LT.0) B(12)=B(12)+3.14159
      A(1) =1.0
      A(2) =1.0
      A(14)=1.0
      A(15)=1.0
      A(16)=1.0
      A(18) = 1.0
      A(19) = 1.0
      A(35) = 1.0
      A(36) = 1.0
      A(37) = 1.0
      A(52)=1.0
      B(1) = 0.0
      B(2) =0.0
      B(14)=0.0
      B(15)=0.0
      B(16)=0.0
      B(18)=0.0
      B(19)=0.0
      B(35)=0.0
      B(52)=0.0
      B(37)=0.0
      B(39)=0.0
      B(36)=0.0
      B(4) =-B(31)
      B(41)= B(4)
      B(22)=-B(10)
      A(24)= A(10)**2
      B(24)= 2*B(10)
      A(25)= A(31)**2
      A(47)= A(25)
      A(48)= A(25)
      A(56)= A(25)
      A(57)= A(25)
      A(39)= A(25)
      B(25)= 2*B(31)
      B(47)= B(25)
      B(48)= B(25)
      B(56)= B(25)
      B(57)= B(25)
      A(32)= A(31)*A(38)
      A(51)= A(32)
      A(60)= A(32)
12    B(32) = B(31) + B(38)
      B(51) = B(32)
      B(60) = B(32)
      A(40) = A(17)*A(21)
      B(40) = B(17)+B(21)
      A(42) = A(31)*A(10)
      B(42) = B(31)+B(10)
      A(45) = A(31)*A(17)
      B(45) = B(31)+B(17)
      A(54) = A(48)*A(31)
      A(55) = A(54)
      B(54) = B(48) + B(31)
      B(55) = B(54)
      A(58) = A(48)*A(38)
      B(58) = B(48)+B(38)
      A(43) = A(31)**1.5
      B(43) = B(31)*1.5
      A(11) = A(31)*A(15)
      B(11) = B(31)-B(15)
      A(61) = 1.0
      A(62) = A(31)*A(48)*A(38)
      A(63)=A(55)
      A(64)=A(48)*A(38)
      A(65)=A(51)
      A(66)=A(38)
      A(67)=A(48)*A(48)
      A(68)=A(42)
      A(69)=A(48)
      A(70)=A(48)*A(10)
      A(71)=A(55)*A(38)
      A(72)=A(55)
      A(73) = A(64)
      A(74)=A(55)*A(17)
      A(75)=0.5*(A(48)+A(55))
      A(76)=A(55)*A(10)
      A(77) = A(67)
      A(78) = A(67)
      A(79) = A(67)*A(38)
      A(80) = A(67)
      A(81)=A(55)*A(38)
      A(82)=A(55)
      A(83)=A(55)*A(38)
      A(84)=A(55)*A(48)
      A(85) = A(67)
      A(86)=A(51)*A(34)
      A(87) = A(67)
      A(88) = A(67)
      A(89) = A(67)
      A(90)=A(55)
      A(91)=A(55)
      A(92)=A(55)*A(38)
      A(93) = A(64)
      A(94)=A(48)
      A(95) = A(64)
      A(96) = A(67)
      A(97)=A(55)
      A(98)=A(55)*A(48)
      A(99)=A(55)*A(48)
      A(100)=A(48)*A(48)
      B(61) = 0.0
      B(62) = 3.0*B(31)-B(38)
      B(63)=B(55)
      B(64)=B(48)+B(38)
      B(65)=B(31)-B(38)
      B(66)=-B(38)
      B(67)=0.0
      B(68)=B(42)
      B(69)=B(48)
      B(70)=B(48)-B(10)
      B(71)=B(55)-B(38)
      B(72)=B(55)
      B(73)=B(48)-B(38)
      B(74)=B(55)-B(17)
      B(75)=2.5*B(31)
C  N.B. FOR B NOTE THIS A SMALL QUANTITY WHEN B(31) IS LISTED AS 354 SAY
C  B(75) AS 5/2*(-6)
      IF (B(31)-3.14159) 16,16,15
15    B(75) = B(75)-15.70795
16    B(76)=B(55)-B(10)
      B(77) = 2.0*B(48)
      B(78)=2.0*B(48)
      B(79)=2.0*B(48)-B(38)
      B(80)=2.0*B(48)
      B(81)=B(55)-B(38)
      B(82)=B(55)
      B(83)=B(55)-B(38)
      B(84)=B(55)
      B(85)=B(48)
      B(86)=B(51)+B(34)
      B(87)=2.0*B(48)
      B(88)=2.0*B(48)
      B(89)=2.0*B(48)
      B(90)=B(55)
      B(91)=B(55)
      B(92)=B(55)+B(38)
      B(93)=B(48)+B(38)
      B(94)=B(48)
      B(95)=B(48)+B(38)
      B(96)=2.0*B(48)
      B(97)=B(55)
      B(98)=5.0*B(31)
      B(99)=5.0*B(31)
      B(100)=2.0*B(48)
      A(101) = A(48)
      A(102) = A(48)*A(38)
C   A(103) , B(103) ARE CHANGED ACCORDING TO CARTWRIGHT'S NOTES
C   OF NOV. 15 1977.
      A(103) = 1.0
      A(104) = 1.0
      A(105) = 1.0
      A(106) =   A(38)*A(31)
      A(107) = A(48) *A(31)
      A(108) = A(48)
      A(109) = 1.0
      A(110) = A(48)*A(31)
      A(111) = 1.0
      A(112) = 1.0
      A(113) = A(31)*A(10)
      A(114) = A(31)*A(17)
      B(101) = 2.0*B(31)
      B(102) = B(48)-B(38)
      B(103) = 0.0
      B(104) = 0.0
      B(105) = 0.0
      B(106) = B(38)-B(31)
      B(107) = B(48)+B(31)
      B(108) = B(48)
      B(109) = 0.0
      B(110) = B(31)
      B(111) = 0.0
      B(112) = 0.0
      B(113) = B(31)+B(10)
      B(114) = B(31) + B(17)
      DO 30 N = 1, SA
      F(N) =1.0
      U(N) =0.0
C    SIG , V,F,U ARE FOR CONS. GIVEN BY C.
      DO 22 Q =1,114
      DIFF = DABS(SIG(N) - C(Q))
      IF (DIFF.GE.0.000002) GO TO 22
      F(N) = A(Q)
      U(N) = B(Q)
22    CONTINUE
      IF (NODD .LE. 0) GO TO 30
      DO 26 Q =1, NODD
      DIFF = DABS( SIG(N)- SIGODD(Q))
      IF (DIFF .GE.0.000002) GO TO 26
      F(N) =FSTART(Q) + T*FGRAD(Q)
      U(N) =USTART(Q) + T*UGRAD(Q)
26    CONTINUE
30    CONTINUE
      RETURN
      END
      SUBROUTINE PRINR(ARG)
      REAL*8 ARG,TWOPI
      COMMON /EO/ TWOPI,JOBS,JPRED,JRES
      IARG = ARG/TWOPI
      ARG = ARG - FLOAT(IARG)*TWOPI
      RETURN
      END
      SUBROUTINE SHPN (IY,IVD,S,H,P,CN,P1)
C
C SLIGHTLY MODIFIED VERSION OF SHPN BY P.L.WOODWORTH MAY 96
C TO ALLOW ARGUMENTS TO BE COMPUTED FOR NEGATIVE IY VALUES
C I.E. BEFORE 1900. THE JOB WILL STOP IF THE IY VALUE IS OUTSIDE
C THE RANGE -99 TO +200 (I.E. YEARS 1801 TO 2100)
C
      REAL*8 S,H,P,CN
      DIMENSION ENN(4)
C
      IF(IY.LT.-99.OR.IY.GT.200) THEN
        WRITE(6,*) ' JOB STOPS IN S/R SHPN: IY = ',IY
        WRITE(6,*)
     & ' IY IS OUTSIDE THE RANGE -99 TO 200 (I.E. YEARS 1801-2100)'
        STOP
      ENDIF
C
      IF(IY.GE.0) THEN
          JY = IY - 1
          IL = JY/4
          DL = IL + IVD - 1.0
C IL HERE IS THE NUMBER OF LEAP YEARS BETWEEN THE START OF 1900 AND THE START
C OF THE YEAR IY
      ENDIF
      IF(IY.LT.0) THEN
          JY = IABS(IY)
          IL = JY/4
C IL HERE IS THE NUMBER OF LEAP YEARS BETWEEN THE START OF THE YEAR IY AND
C THE START OF 1900
          DL = -IL + IVD - 1.0
      ENDIF
C
      ENN(1) = 277.0247+129.38481*IY  +13.17639*DL
      ENN(2) = 280.1895-  0.23872*IY + 0.98565*DL
      ENN(3) = 334.3853+ 40.66249*IY  + 0.11140*DL
      ENN(4) = 259.1568- 19.32818*IY  - 0.05295*DL
      DO 20 J = 1, 4
10    IF (ENN(J) ) 12,14,14
12    ENN(J) = ENN(J) + 360.0
      GO TO 10
14    IF ( ENN(J) - 360.0) 18,16,16
16    ENN(J) = ENN(J) -360.0
      GO TO 14
18    CONTINUE
20    CONTINUE
      S = ENN(1)
      H = ENN(2)
      P = ENN(3)
      CN = ENN(4)
      P1 = 281.2209 + 0.17192*IY
      RETURN
      END
      SUBROUTINE DTCHK(IY1,ID1,HR1,IY2,ID2,HR2,DELT)
      REAL*8 DELT
      L = 0
      IY = IY1
      ID = ID1
  10  IF (IY.EQ.IY2.AND.ID.EQ.ID2) GOTO 20
      CALL UDATF(IY,ID,IY,ID,1)
      L = L + 1
      GOTO 10
  20  DELT = L*24 + HR2-HR1
      RETURN
      END

